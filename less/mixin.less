/*------------------------------------------------------------------
[Table of contents]

MIXIN FOR LESS

1. Mixin for Font
2. Define colors
3. CSS3 PROPERTIES
-------------------------------------------------------------------*/




/*-----------------------------------------------------------------------------------------------------------
1. Mixin for Font 
-----------------------------------------------------------------------------------------------------------*/
.setSize(@fontSize) {
    @unitlessSize: unit(@fontSize);
    @remValue: @unitlessSize / 16;
    font-size: ~"@{unitlessSize}px"; // Unsupported browser fallback
    font-size: ~"@{remValue}rem";
}
.setFont(@fontName, @fontSize: null) when (@fontName = 1) {
    font-family: 'bourgeois_bold';
    & when not (@fontSize = null) {
        @unitlessSize: unit(@fontSize);
        @remValue: @unitlessSize / 16;
        font-size: ~"@{unitlessSize}px"; // Unsupported browser fallback
        font-size: ~"@{remValue}rem";
    }
}

.setFont(@fontName, @fontSize: null) when (@fontName = 2) {
    font-family: 'bourgeois_med';
    & when not (@fontSize = null) {
        @unitlessSize: unit(@fontSize);
        @remValue: @unitlessSize / 16;
        font-size: ~"@{unitlessSize}px"; // Unsupported browser fallback
        font-size: ~"@{remValue}rem";
    }
}
.setFont(@fontName, @fontSize: null) when (@fontName = 3) {
    font-family: 'aero_matics_regular';
    & when not (@fontSize = null) {
        @unitlessSize: unit(@fontSize);
        @remValue: @unitlessSize / 16;
        font-size: ~"@{unitlessSize}px"; // Unsupported browser fallback
        font-size: ~"@{remValue}rem";
    }
}
.setFont(@fontName, @fontSize: null) when (@fontName = 4) {
    font-family: 'aero_matics_light_regular';
    & when not (@fontSize = null) {
        @unitlessSize: unit(@fontSize);
        @remValue: @unitlessSize / 16;
        font-size: ~"@{unitlessSize}px"; // Unsupported browser fallback
        font-size: ~"@{remValue}rem";
    }
}
.setFont(@fontName, @fontSize: null) when (@fontName = 5) {
    font-family: 'aero_matics_light_italic';
    & when not (@fontSize = null) {
        @unitlessSize: unit(@fontSize);
        @remValue: @unitlessSize / 16;
        font-size: ~"@{unitlessSize}px"; // Unsupported browser fallback
        font-size: ~"@{remValue}rem";
    }
}

/*-----------------------------------------------------------------------------------------------------------
2. Define colors
-----------------------------------------------------------------------------------------------------------*/
@color00:       #ff0000;
@colorxx:       #00cc00;
@color01:       #ffffff;
@color02:       #000000;

@gray01:        #27272d;
@gray02:        #5f605f;
@gray03:        #08080f;
@gray04:        #eeeeee;
@gray05:        #444444;
@gray06:        #26262c;
@green:        #aecb44;
@green02:        #99b53d;


@color-sg-1:    #ffeece; /*for style guide*/
@color-sg-2:    #ffa800; /*for style guide*/



/*-----------------------------------------------------------------------------------------------------------
3. CSS3 PROPERTIES 
-----------------------------------------------------------------------------------------------------------*/
// Border Radius
.border-radius(@radius) {
    -webkit-border-radius: @radius;
       -moz-border-radius: @radius;
            border-radius: @radius;
}

// Single Corner Border Radius
.border-top-left-radius(@radius) {
    -webkit-border-top-left-radius: @radius;
        -moz-border-radius-topleft: @radius;
            border-top-left-radius: @radius;
}
.border-top-right-radius(@radius) {
    -webkit-border-top-right-radius: @radius;
        -moz-border-radius-topright: @radius;
            border-top-right-radius: @radius;
}
.border-bottom-right-radius(@radius) {
    -webkit-border-bottom-right-radius: @radius;
        -moz-border-radius-bottomright: @radius;
            border-bottom-right-radius: @radius;
}
.border-bottom-left-radius(@radius) {
    -webkit-border-bottom-left-radius: @radius;
        -moz-border-radius-bottomleft: @radius;
            border-bottom-left-radius: @radius;
}

// Single Side Border Radius
.border-top-radius(@radius) {
    .border-top-right-radius(@radius);
    .border-top-left-radius(@radius);
}
.border-right-radius(@radius) {
    .border-top-right-radius(@radius);
    .border-bottom-right-radius(@radius);
}
.border-bottom-radius(@radius) {
    .border-bottom-right-radius(@radius);
    .border-bottom-left-radius(@radius);
}
.border-left-radius(@radius) {
    .border-top-left-radius(@radius);
    .border-bottom-left-radius(@radius);
}

// Drop shadows
.box-shadow(@shadow) {
    -webkit-box-shadow: @shadow;
       -moz-box-shadow: @shadow;
            box-shadow: @shadow;
}

// Transitions
.transition(@transition) {
    -webkit-transition: @transition;
       -moz-transition: @transition;
         -o-transition: @transition;
            transition: @transition;
}
.transition-delay(@transition-delay) {
    -webkit-transition-delay: @transition-delay;
       -moz-transition-delay: @transition-delay;
         -o-transition-delay: @transition-delay;
            transition-delay: @transition-delay;
}
.transition-duration(@transition-duration) {
    -webkit-transition-duration: @transition-duration;
       -moz-transition-duration: @transition-duration;
         -o-transition-duration: @transition-duration;
            transition-duration: @transition-duration;
}

// Transformations
.rotate(@degrees) {
    -webkit-transform: rotate(@degrees);
       -moz-transform: rotate(@degrees);
        -ms-transform: rotate(@degrees);
         -o-transform: rotate(@degrees);
            transform: rotate(@degrees);
}
.scale(@ratio) {
    -webkit-transform: scale(@ratio);
       -moz-transform: scale(@ratio);
        -ms-transform: scale(@ratio);
         -o-transform: scale(@ratio);
            transform: scale(@ratio);
}
.translate(@x, @y) {
    -webkit-transform: translate(@x, @y);
       -moz-transform: translate(@x, @y);
        -ms-transform: translate(@x, @y);
         -o-transform: translate(@x, @y);
            transform: translate(@x, @y);
}
.skew(@x, @y) {
    -webkit-transform: skew(@x, @y);
       -moz-transform: skew(@x, @y);
        -ms-transform: skewX(@x) skewY(@y); // See https://github.com/twitter/bootstrap/issues/4885
         -o-transform: skew(@x, @y);
            transform: skew(@x, @y);
    -webkit-backface-visibility: hidden; // See https://github.com/twitter/bootstrap/issues/5319
}
.translate3d(@x, @y, @z) {
    -webkit-transform: translate3d(@x, @y, @z);
       -moz-transform: translate3d(@x, @y, @z);
         -o-transform: translate3d(@x, @y, @z);
            transform: translate3d(@x, @y, @z);
}

// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden
// See git pull https://github.com/dannykeane/bootstrap.git backface-visibility for examples
.backface-visibility(@visibility){
    -webkit-backface-visibility: @visibility;
       -moz-backface-visibility: @visibility;
            backface-visibility: @visibility;
}

// Background clipping
// Heads up: FF 3.6 and under need "padding" instead of "padding-box"
.background-clip(@clip) {
    -webkit-background-clip: @clip;
       -moz-background-clip: @clip;
            background-clip: @clip;
}

// Background sizing
.background-size(@size) {
    -webkit-background-size: @size;
       -moz-background-size: @size;
         -o-background-size: @size;
            background-size: @size;
}


// Box sizing
.box-sizing(@boxmodel) {
    -webkit-box-sizing: @boxmodel;
       -moz-box-sizing: @boxmodel;
            box-sizing: @boxmodel;
}

// User select
// For selecting text on the page
.user-select(@select) {
    -webkit-user-select: @select;
       -moz-user-select: @select;
        -ms-user-select: @select;
         -o-user-select: @select;
            user-select: @select;
}

// Resize anything
.resizable(@direction) {
    resize: @direction; // Options: horizontal, vertical, both
    overflow: auto; // Safari fix
}

// CSS3 Content Columns
.content-columns(@columnCount, @columnGap: @gridGutterWidth) {
    -webkit-column-count: @columnCount;
       -moz-column-count: @columnCount;
            column-count: @columnCount;
      -webkit-column-gap: @columnGap;
         -moz-column-gap: @columnGap;
              column-gap: @columnGap;
}

// Optional hyphenation
.hyphens(@mode: auto) {
    word-wrap: break-word;
    -webkit-hyphens: @mode;
       -moz-hyphens: @mode;
        -ms-hyphens: @mode;
         -o-hyphens: @mode;
            hyphens: @mode;
}

// Opacity
.opacity(@opacity) {
    opacity: @opacity / 100;
    filter: ~"alpha(opacity=@{opacity})";
}

// Gradient Bar Colors for buttons and alerts
.gradientBar(@primaryColor, @secondaryColor, @textColor: #fff, @textShadow: 0 -1px 0 rgba(0,0,0,.25)) {
    color: @textColor;
    text-shadow: @textShadow;
    #gradient > .vertical(@primaryColor, @secondaryColor);
    border-color: @secondaryColor @secondaryColor darken(@secondaryColor, 15%);
    border-color: rgba(0,0,0,.1) rgba(0,0,0,.1) fadein(rgba(0,0,0,.1), 15%);
}

// Gradients
#gradient {
    .horizontal(@startColor: #555, @endColor: #333) {
        background-color: @endColor;
        background-image: -moz-linear-gradient(left, @startColor, @endColor); // FF 3.6+
        background-image: -webkit-gradient(linear, 0 0, 100% 0, from(@startColor), to(@endColor)); // Safari 4+, Chrome 2+
        background-image: -webkit-linear-gradient(left, @startColor, @endColor); // Safari 5.1+, Chrome 10+
        background-image: -o-linear-gradient(left, @startColor, @endColor); // Opera 11.10
        background-image: linear-gradient(to right, @startColor, @endColor); // Standard, IE10
        background-repeat: repeat-x;
        filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",argb(@startColor),argb(@endColor))); // IE9 and down
    }
    .vertical(@startColor: #555, @endColor: #333) {
        background-color: mix(@startColor, @endColor, 60%);
        background-image: -moz-linear-gradient(top, @startColor, @endColor); // FF 3.6+
        background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), to(@endColor)); // Safari 4+, Chrome 2+
        background-image: -webkit-linear-gradient(top, @startColor, @endColor); // Safari 5.1+, Chrome 10+
        background-image: -o-linear-gradient(top, @startColor, @endColor); // Opera 11.10
        background-image: linear-gradient(to bottom, @startColor, @endColor); // Standard, IE10
        background-repeat: repeat-x;
        filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@startColor),argb(@endColor))); // IE9 and down
    }
    .directional(@startColor: #555, @endColor: #333, @deg: 45deg) {
        background-color: @endColor;
        background-repeat: repeat-x;
        background-image: -moz-linear-gradient(@deg, @startColor, @endColor); // FF 3.6+
        background-image: -webkit-linear-gradient(@deg, @startColor, @endColor); // Safari 5.1+, Chrome 10+
        background-image: -o-linear-gradient(@deg, @startColor, @endColor); // Opera 11.10
        background-image: linear-gradient(@deg, @startColor, @endColor); // Standard, IE10
    }
    .horizontal-three-colors(@startColor: #00b3ee, @midColor: #7a43b6, @colorStop: 50%, @endColor: #c3325f) {
        background-color: mix(@midColor, @endColor, 80%);
        background-image: -webkit-gradient(left, linear, 0 0, 0 100%, from(@startColor), color-stop(@colorStop, @midColor), to(@endColor));
        background-image: -webkit-linear-gradient(left, @startColor, @midColor @colorStop, @endColor);
        background-image: -moz-linear-gradient(left, @startColor, @midColor @colorStop, @endColor);
        background-image: -o-linear-gradient(left, @startColor, @midColor @colorStop, @endColor);
        background-image: linear-gradient(to right, @startColor, @midColor @colorStop, @endColor);
        background-repeat: no-repeat;
        filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@startColor),argb(@endColor))); // IE9 and down, gets no color-stop at all for proper fallback
    }

    .vertical-three-colors(@startColor: #00b3ee, @midColor: #7a43b6, @colorStop: 50%, @endColor: #c3325f) {
        background-color: mix(@midColor, @endColor, 80%);
        background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), color-stop(@colorStop, @midColor), to(@endColor));
        background-image: -webkit-linear-gradient(@startColor, @midColor @colorStop, @endColor);
        background-image: -moz-linear-gradient(top, @startColor, @midColor @colorStop, @endColor);
        background-image: -o-linear-gradient(@startColor, @midColor @colorStop, @endColor);
        background-image: linear-gradient(@startColor, @midColor @colorStop, @endColor);
        background-repeat: no-repeat;
        filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",argb(@startColor),argb(@endColor))); // IE9 and down, gets no color-stop at all for proper fallback
    }
    .radial(@innerColor: #555, @outerColor: #333) {
        background-color: @outerColor;
        background-image: -webkit-gradient(radial, center center, 0, center center, 460, from(@innerColor), to(@outerColor));
        background-image: -webkit-radial-gradient(circle, @innerColor, @outerColor);
        background-image: -moz-radial-gradient(circle, @innerColor, @outerColor);
        background-image: -o-radial-gradient(circle, @innerColor, @outerColor);
        background-repeat: no-repeat;
    }
    .striped(@color: #555, @angle: 45deg) {
        background-color: @color;
        background-image: -webkit-gradient(linear, 0 100%, 100% 0, color-stop(.25, rgba(255,255,255,.15)), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, rgba(255,255,255,.15)), color-stop(.75, rgba(255,255,255,.15)), color-stop(.75, transparent), to(transparent));
        background-image: -webkit-linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
        background-image: -moz-linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
        background-image: -o-linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
        background-image: linear-gradient(@angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    }
}
// Reset filters for IE
    .reset-filter() {
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(enabled = false)"));
}


// FlexLess
// ========
//
// Less mixins for using flexbox without crying.
//
// Last update: 03.27.2015
// https://gist.github.com/jayj/4012969
// Enabeling Flexbox
// -----------------
//
// Property Name: display
// Values: flex | inline-flex
.display(@value: flex) when (@value = flex) {
  display: -moz-box;    // Mozilla Old
  display: -webkit-box; // Webkit Old
}

.display(@value: flex) when (@value = inline-flex) {
  display: -moz-inline-box;    // Mozilla Old
  display: -webkit-inline-box; // Webkit Old
}

.display(@value: flex) {
  display: ~"-webkit-@{value}"; // Webkit Standard
  display: ~"-moz-@{value}";    // Mozilla Standard
  display: ~"-ms-@{value}box";  // IE 10 Mid
  display: ~"-ms-@{value}";     // IE 11 Standard
  display: @value;              // Standard
}


// Axis Alignment
// --------------
//
// Property Name: justify-content
// Values: flex-start | flex-end | center | space-between | space-around
.justify-content(@value: flex-start) when (@value = flex-start) {
  -webkit-box-pack: start; // Webkit Old
     -moz-box-pack: start; // Mozilla Old
     -ms-flex-pack: start; // IE 10 Mid
}

.justify-content(@value: flex-start) when (@value = center) {
  -webkit-box-pack: center; // Webkit Old
     -moz-box-pack: center; // Mozilla Old
     -ms-flex-pack: center; // IE 10 Mid
}

.justify-content(@value: flex-start) when (@value = flex-end) {
  -webkit-box-pack: end; // Webkit Old
     -moz-box-pack: end; // Mozilla Old
     -ms-flex-pack: end; // IE 10 Mid
}

.justify-content(@value: flex-start) when (@value = space-between) {
  -webkit-box-pack: justify; // Webkit Old
     -moz-box-pack: justify; // Mozilla Old
     -ms-flex-pack: justify; // IE 10 Mid
}

.justify-content(@value: flex-start) when (@value = space-around) {
  -ms-flex-pack: distribute; // IE 10 Mid
}

.justify-content(@value: flex-start) {
  -webkit-justify-content: @value; // Webkit Standard
     -moz-justify-content: @value; // Mozilla Standard
      -ms-justify-content: @value; // IE 11 Standard
          justify-content: @value; // Standard
}


// Cross Axis Alignment
// --------------------
//
// Property Name: align-items
// Values: flex-start | flex-end | center | baseline | stretch
.align-items(@value: stretch) when (@value = flex-start) {
  -webkit-box-align: start; // Webkit Old
     -moz-box-align: start; // Mozilla Old
     -ms-flex-align: start; // IE 10 Mid
}

.align-items(@value: stretch) when (@value = center), (@value = baseline), (@value = stretch) {
  -webkit-box-align: @value; // Webkit Old
     -moz-box-align: @value; // Mozilla Old
     -ms-flex-align: @value; // IE 10 Mid

}

.align-items(@value: stretch) when (@value = flex-end) {
  -webkit-box-align: end; // Webkit Old
     -moz-box-align: end; // Mozilla Old
     -ms-flex-align: end; // IE 10 Mid
}

.align-items(@value: stretch) {
  -webkit-align-items: @value; // Webkit Standard
     -moz-align-items: @value; // Mozilla Standard
      -ms-align-items: @value; // IE 11 Standard
          align-items: @value; // Standard
}


// Individual Cross-Axis Alignment
// -------------------------------
//
// Property Name: align-self
// Values: auto | flex-start | flex-end | center | baseline | stretch
.align-self(@value: auto) when (@value = flex-start) {
  -ms-flex-item-align: start; // IE 10 Mid
}

.align-self(@value: auto) when (@value = auto), (@value = center), (@value = baseline), (@value = stretch) {
  -ms-flex-item-align: @value; // IE 10 Mid
}

.align-self(@value: auto) when (@value = flex-end) {
  -ms-flex-item-align: end; // IE 10 Mid
}

.align-self(@value: auto) {
  -webkit-align-self: @value; // Webkit Standard
     -moz-align-self: @value; // Mozilla Standard
      -ms-align-self: @value; // IE 11 Standard
          align-self: @value; // Standard
}


// Flex Line Alignment
// -------------------
//
// Property Name: align-content
// Values: flex-start | flex-end | center | space-between | space-around | stretch
.align-content(@value: auto) when (@value = flex-start) {
  -ms-flex-line-pack: start; // IE 10 Mid
}

.align-content(@value: auto) when (@value = center), (@value = stretch) {
  -ms-flex-line-pack: @value; // IE 10 Mid
}

.align-content(@value: auto) when (@value = flex-end) {
  -ms-flex-line-pack: end; // IE 10 Mid
}

.align-content(@value: auto) when (@value = space-between) {
  -ms-flex-line-pack: justify; // IE 10 Mid
}

.align-content(@value: auto) when (@value = space-around) {
  -ms-flex-line-pack: distribute; // IE 10 Mid
}

.align-content(@value: auto) {
  -webkit-align-content: @value; // Webkit Standard
     -moz-align-content: @value; // Mozilla Standard
      -ms-align-content: @value; // IE 11 Standard
          align-content: @value; // Standard
}



// Display Order
// -------------
//
// Property Name: order
// Values: <integer>
.order(@value: 0) {
   -webkit-box-ordinal-group: @value + 1; // Webkit Old
      -moz-box-ordinal-group: @value + 1; // Mozilla Old
              -ms-flex-order: @value;     // IE 10 Mid
               -webkit-order: @value;     // Webkit Standard
                  -moz-order: @value;     // Mozilla Standard
                   -ms-order: @value;     // IE 11 Standard
                       order: @value;     // Standard
}


// Flexibillity
// ------------
//
// Property Name: flex
// Values: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]
.flex (@grow: 1, @shrink: 1, @basis: 0%) {
  -webkit-box-flex: @grow;      // Webkit Old
     -moz-box-flex: @grow;      // Mozilla Old
      -webkit-flex: @grow; // Webkit Standard
         -moz-flex: @grow; // Mozilla Standard
          -ms-flex: @grow; // IE 10 Mid, IE 11 Standard
              flex: @grow; // Standard
}


// Longhand - Flex Grow
// --------------------
//
// Property Name: flex-grow
// Value: <number>
.flex-grow(@value: 0) {
  -webkit-flex-grow: @value; // Webkit Standard
     -moz-flex-grow: @value; // Mozilla Standard
      -ms-flex-grow: @value; // IE 10 Mid, IE 11 Standard
          flex-grow: @value; // Standard
}

// Longhand - Flex Shrink
// --------------------
//
// Property Name: flex-shrink
// Value: <number>
.flex-shrink(@value: 1) {
  -webkit-flex-shrink: @value; // Webkit Standard
     -moz-flex-shrink: @value; // Mozilla Standard
    -ms-flex-shrink: @value;   // IE 10 Mid, IE 11 Standard
      flex-shrink: @value;     // Standard
}

// Longhand - Flex Basis
// --------------------
//
// Property Name: flex-basis
// Value: <number>
.flex-basis(@value: auto) {
  -webkit-flex-basis: @value; // Webkit Standard
     -moz-flex-basis: @value; // Mozilla Standard
    -ms-flex-basis: @value;   // IE 10 Mid, IE 11 Standard
      flex-basis: @value;     // Standard
}


// Direction
// ---------
//
// Property Name: flex-direction
// Values: row | row-reverse | column | column-reverse
.flex-direction(@value: row) when (@value = row) {
  .box-orient(horizontal);
  .box-direction(normal);
}

.flex-direction(@value: row) when (@value = row-reverse) {
  .box-orient(horizontal);
  .box-direction(reverse);

}

.flex-direction(@value: row) when (@value = column) {
  .box-orient(vertical);
  .box-direction(normal);
}

.flex-direction(@value: row) when (@value = column-reverse) {
  .box-orient(vertical);
  .box-direction(reverse);
}

.flex-direction(@value: row) {
  -webkit-flex-direction: @value; // Webkit Standard
     -moz-flex-direction: @value; // Mozilla Standard
      -ms-flex-direction: @value; // IE 10 Mid, IE 11 Standard
          flex-direction: @value; // Standard
}


// Old Properties
// --------------
.box-direction(@value) {
  -webkit-box-direction: @value; // Webkit Old
     -moz-box-direction: @value; // Mozilla Old
}

.box-orient(@value) {
  -webkit-box-orient: @value; // Webkit Old
     -moz-box-orient: @value; // Mozilla Old
}



// Wrapping
// --------
//
// Property Name: flex-wrap
// Values: nowrap | wrap | wrap-reverse
.flex-wrap(@value: nowrap) when (@value = nowrap) {
  -webkit-box-lines: single; // Webkit Old
     -moz-box-lines: single; // Mozilla Old
}

.flex-wrap(@value: nowrap) when (@value = wrap) {
  -webkit-box-lines: multiple; // Webkit Old
     -moz-box-lines: mulitple; // Mozilla Old
}

.flex-wrap(@value: nowrap) {
  -webkit-flex-wrap: @value; // Webkit Standard
     -moz-flex-wrap: @value; // Mozilla Standard
      -ms-flex-wrap: @value; // IE 10 Mid, IE 11 Standard
          flex-wrap: @value; // Standard
}


// Shorthand - Flex Flow
// ---------------------
//
// Property Name: flex-flow
// Values: <‘flex-direction’> || <‘flex-wrap’>
.flex-flow(@direction: row, @wrap: nowrap) {
  -webkit-flex-flow: @arguments; // Webkit Standard
     -moz-flex-flow: @arguments; // Mozilla Standard
      -ms-flex-flow: @arguments; // IE 10 Mid, IE 11 Standard
          flex-flow: @arguments;
}
